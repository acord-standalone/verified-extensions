(function(i,w,E,L,$,c,r){"use strict";function b(s){return s&&typeof s=="object"&&"default"in s?s:{default:s}}var T=b(w),N=b(E),v=b(L),F=()=>$.injectCSS(".peopleListItem-u6dGxF:hover .actionButton-3-B2x-{background-color:#1e1f22!important}.fn--log-modal-container{width:600px;transform:translate(-50%,-50%)!important;display:flex;flex-direction:column;padding:16px;gap:16px}.fn--log-modal-container>.modal-header{width:100%;display:flex;align-items:center;justify-content:space-between}.fn--log-modal-container>.modal-header .title{font-size:1.5rem;font-weight:600;color:#f5f5f5}.fn--log-modal-container>.modal-header .close{cursor:pointer;color:#f5f5f5;opacity:.75}.fn--log-modal-container>.modal-body>.no-logs{font-size:14px;font-weight:400;color:#f5f5f5}.fn--log-modal-container>.modal-body>.logs{overflow:auto;height:300px;display:flex;gap:8px;flex-direction:column}.fn--log-modal-container>.modal-body>.logs .log{display:flex;flex-direction:column;color:#f5f5f5;padding:8px;background-color:#00000040;border-radius:8px;gap:4px;border-left:2px solid var(--color)}.fn--log-modal-container>.modal-body>.logs .log .time{font-size:12px;opacity:.75;width:fit-content}.fn--log-modal-container>.modal-body>.logs .log .content{font-size:18px}.fn--settings-modal-container{width:600px;transform:translate(-50%,-50%)!important;display:flex;flex-direction:column;padding:16px;gap:16px}.fn--settings-modal-container>.modal-header{width:100%;display:flex;align-items:center;justify-content:space-between}.fn--settings-modal-container>.modal-header .title{font-size:1.5rem;font-weight:600;color:#f5f5f5}.fn--settings-modal-container>.modal-header .end{display:flex;gap:8px;align-items:center}.fn--settings-modal-container>.modal-header .close,.fn--settings-modal-container>.modal-header .logs{cursor:pointer;color:#f5f5f5;opacity:.75}.fn--settings-modal-container>.modal-body{width:100%;display:flex;flex-direction:column;gap:8px;justify-content:space-between;align-items:center}.fn--settings-modal-container>.modal-body .setting-container{width:100%;display:flex;gap:8px;justify-content:space-between;align-items:center;flex-direction:row}.fn--settings-modal-container>.modal-body .setting-container>.title{font-size:1.25rem;font-weight:600;color:#f5f5f5}.fn--settings-modal-container>.modal-body .setting-container>.body{display:flex;gap:16px;justify-content:right;align-items:center;flex-direction:row}.fn--settings-modal-container>.modal-body .setting-container>.body>.select-wrapper{width:150px}.fn--settings-modal-container>.modal-body .setting-container>.body div{cursor:pointer;pointer-events:all}");let I={},f={},u={};const O=["status","activity","stream","voice","text","listen","platform"];function C(s){const t=r.UserStore.getUser(s);c.modals.show(({onClose:e,close:l})=>{const n=T.default.parse(`
        <div class="fn--settings-modal-container root_a28985 fullscreenOnMobile__96797 rootWithShadow__073a7">
          <div class="modal-header">
            <div class="title">${i.i18n.format("SETTINGS_OF",t?t.globalName||t.username:s)}</div>
            <div class="end">
              <div class="logs" acord--tooltip-content="${i.i18n.format("LOGS")}" @click="openLogs">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">
                  <path fill="currentColor" d="M20 22H4C3.44772 22 3 21.5523 3 21V3C3 2.44772 3.44772 2 4 2H20C20.5523 2 21 2.44772 21 3V21C21 21.5523 20.5523 22 20 22ZM19 20V4H5V20H19ZM8 7H16V9H8V7ZM8 11H16V13H8V11ZM8 15H16V17H8V15Z"></path>
                </svg>
              </div>
              <div class="close" @click="close">
                <svg
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                >
                  <path d="M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z" fill="currentColor"></path>
                </svg>
              </div>
            </div>
          </div>
          <div class="modal-body">

            <div class="setting-container" style="z-index: -1;">
              <div class="title">${i.i18n.format("STATUS")}</div>
              <div class="body">
                <div class="select-wrapper">
                  <discord-select v-model="settings.status.notification" :options="settingOptions"></discord-select>
                </div>
                <discord-check v-model="settings.status.enabled"></discord-check>
              </div>
            </div>

            <div class="setting-container" style="z-index: -2;">
              <div class="title">${i.i18n.format("PLATFORM")}</div>
              <div class="body">
                <div class="select-wrapper">
                  <discord-select v-model="settings.platform.notification" :options="settingOptions"></discord-select>
                </div>
                <discord-check v-model="settings.platform.enabled"></discord-check>
              </div>
            </div>

            <div class="setting-container" style="z-index: -3;">
              <div class="title">${i.i18n.format("LISTEN")}</div>
              <div class="body">
                <div class="select-wrapper">
                  <discord-select v-model="settings.listen.notification" :options="settingOptions"></discord-select>
                </div>
                <discord-check v-model="settings.listen.enabled"></discord-check>
              </div>
            </div>

            <div class="setting-container" style="z-index: -4;">
              <div class="title">${i.i18n.format("ACTIVITY")}</div>
              <div class="body">
                <div class="select-wrapper">
                  <discord-select v-model="settings.activity.notification" :options="settingOptions"></discord-select>
                </div>
                <discord-check v-model="settings.activity.enabled"></discord-check>
              </div>
            </div>

            <div class="setting-container" style="z-index: -5;">
              <div class="title">${i.i18n.format("STREAM")}</div>
              <div class="body">
                <div class="select-wrapper">
                  <discord-select v-model="settings.stream.notification" :options="settingOptions"></discord-select>
                </div>
                <discord-check v-model="settings.stream.enabled"></discord-check>
              </div>
            </div>

            <div class="setting-container" style="z-index: -6;">
              <div class="title">${i.i18n.format("VOICE")}</div>
              <div class="body">
                <div class="select-wrapper">
                  <discord-select v-model="settings.voice.notification" :options="settingOptions"></discord-select>
                </div>
                <discord-check v-model="settings.voice.enabled"></discord-check>
              </div>
            </div>

            <div class="setting-container" style="z-index: -7;">
              <div class="title">${i.i18n.format("TEXT")}</div>
              <div class="body">
                <div class="select-wrapper">
                  <discord-select v-model="settings.text.notification" :options="settingOptions"></discord-select>
                </div>
                <discord-check v-model="settings.text.enabled"></discord-check>
              </div>
            </div>

          </div>
        </div>
      `),o=Vue.createApp({data(){return{settingOptions:[{value:1,label:i.i18n.format("IN_APP")},{value:2,label:i.i18n.format("DESKTOP")},{value:3,label:i.i18n.format("ONLY_LOG")}],settings:Object.fromEntries(O.map(a=>{let d=i.persist.ghost.users?.[s]?.settings?.[a];return[a,{notification:d?.notification??1,enabled:d?.enabled??!1}]}))}},watch:{settings:{deep:!0,handler(){this.saveDebounced()}}},methods:{close:l,saveDebounced:_.debounce(function(){if(O.every(a=>!this.settings[a].enabled)){delete i.persist.store.users[s].settings;return}O.forEach(a=>{i.persist.store.users[s].settings[a]={notification:this.settings[a].notification,enabled:this.settings[a].enabled}})},1e3),openLogs(){x(s)}}});return c.vue.components.load(o),o.mount(n),e(()=>{setTimeout(()=>{o.unmount(),n.remove()},1e3)}),n})}function y(s){const t=s?.parentElement?.parentElement,e=t.getAttribute("data-list-item-id")?.split("___").pop()?.trim();if(!e||t.getElementsByClassName("acord--fn--list-btn").length>0)return;const l=T.default.parse(`
    <div class="actionButton__23182 acord--fn--list-btn" style="color: #b5bac1;">
      <svg version="1.2" baseProfile="tiny" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 448 512" xml:space="preserve" width="15">
        <g>
          <path fill="currentColor" d="M222.987,510c31.418,0,57.529-22.646,62.949-52.5H160.038C165.458,487.354,191.569,510,222.987,510z"/>
          <path fill="currentColor" d="M432.871,352.059c-22.25-22.25-49.884-32.941-49.884-141.059c0-79.394-57.831-145.269-133.663-157.83h-4.141
            c4.833-5.322,7.779-12.389,7.779-20.145c0-16.555-13.42-29.975-29.975-29.975s-29.975,13.42-29.975,29.975
            c0,7.755,2.946,14.823,7.779,20.145h-4.141C120.818,65.731,62.987,131.606,62.987,211c0,108.118-27.643,118.809-49.893,141.059
            C-17.055,382.208,4.312,434,47.035,434H398.93C441.568,434,463.081,382.269,432.871,352.059z"/>
        </g>
      </svg>
    </div>
  `),n=c.tooltips.create(l,i.i18n.format("NOTIFICATIONS"));return l.onclick=o=>{o.preventDefault(),o.stopPropagation(),C(e)},t.getElementsByClassName("actions_c08157")?.[0]?.replaceChildren(l,...t.getElementsByClassName("actions_c08157")[0].children),()=>{n.destroy()}}async function m(s,t,e,l=5793266){let n=await v.default.get(`FriendNotifications;UserLogs;${s}`,[]);n.push({userId:s,action:t,content:e,at:Date.now(),color:l}),n=n.slice(-100),await v.default.set(`FriendNotifications;UserLogs;${s}`,n)}const h={0:"ACTIVITY_PLAYING_NOTIFICATION",1:"ACTIVITY_STREAMING_NOTIFICATION",2:"ACTIVITY_LISTENING_NOTIFICATION",3:"ACTIVITY_WATCHING_NOTIFICATION",4:"ACTIVITY_CUSTOM_NOTIFICATION",5:"ACTIVITY_COMPETING_NOTIFICATION"},A={1:"stream",2:"listen"};function M({updates:s}){s.forEach(e=>{const l=i.persist.ghost.users?.[e.user.id]?.settings??{},n=r.UserStore.getUser(e.user.id);e.activities.forEach(o=>{const a=A[o.type]||"activity";if(!l?.[a]?.enabled)return;f[e.user.id]||(f[e.user.id]={});let d=`${o.name} ${o.details||o.state||""}`.trim();if(f[e.user.id][o.id]){if(f[e.user.id][o.id]?.[2]!==o.name){let g=[h[o.type]||"ACTIVITY_UNKNOWN_NOTIFICATION",n?.globalName||n?.username,d];m(e.user.id,a,g,5490065),p(e.user.id,a,i.i18n.format(...g))}}else{let g=[h[o.type]?`${h[o.type]}_NOW_STARTED`:"ACTIVITY_UNKNOWN_NOTIFICATION_NOW_STARTED",n?.globalName||n?.username,d];m(e.user.id,a,g,4453761),p(e.user.id,a,i.i18n.format(...g))}f[e.user.id][o.id]=[o.type,d,o.name]}),f[e.user.id]&&Object.keys(f[e.user.id]??{}).forEach(o=>{if(!e.activities.some(a=>a.id===o)){let[a,d]=f[e.user.id][o];const g=A[a]||"activity";if(delete f[e.user.id][o],!l?.[g]?.enabled)return;let S=[h[a]?`${h[a]}_NO_LONGER`:"ACTIVITY_UNKNOWN_NOTIFICATION_NO_LONGER",n.globalName||n.username,d];m(e.user.id,g,S,16077137),p(e.user.id,g,i.i18n.format(...S))}})});const t={};s.forEach(e=>{t[e.user.id]=[Object.keys(e.clientStatus??{}).sort((l,n)=>l-n).join(", "),e.status]});for(const[e,[l,n]]of Object.entries(t??{})){let o=i.persist.ghost.users?.[e]?.settings;if(o?.platform?.enabled&&I[e]!==l){const a=r.UserStore.getUser(e);if(I[e]=l,l.trim()){let d=["PLATFORM_NOTIFICATION",a.globalName||a.username,l.split(", ").map(g=>i.i18n.format("PLATFORM_"+g.toUpperCase())).join(", ")];m(e,"platform",d,5793266),p(e,"platform",i.i18n.format(...d))}}if(o?.status?.enabled&&u[e]!==n){if(!u[e]&&n==="offline"){u[e]=n;continue}const a=r.UserStore.getUser(e);u[e]=n;let d=["STATUS_NOTIFICATION",a.globalName||a.username,i.i18n.format("STATUS_"+n.toUpperCase())];m(e,"status",d,10179061),p(e,"status",i.i18n.format(...d))}}}function p(s,t,e){switch(i.persist.ghost.users?.[s]?.settings?.[t]?.notification??1){case 1:{c.notifications.show(`<strong>${i.i18n.format("FRIEND_NOTIFICATIONS")}</strong><br/>${e}`,{style:"success"});break}case 2:{new Notification(i.i18n.format("FRIEND_NOTIFICATIONS"),{body:e,image:`https://cdn.discordapp.com/avatars/${s}/${r.UserStore.getUser(s).avatar}.png?size=128`});break}}}function U({voiceStates:s}){s.forEach(t=>{if(!t.guildId||t.oldChannelId===t.channelId||!i.persist.ghost.users?.[t.userId]?.settings?.voice?.enabled)return;const e=r.UserStore.getUser(t.userId),l=t.channelId?`${r.GuildStore.getGuild(t.guildId).name} > ${r.ChannelStore.getChannel(t.channelId).name}`:null,n=t.oldChannelId?`${r.GuildStore.getGuild(t.guildId).name} > ${r.ChannelStore.getChannel(t.oldChannelId).name}`:null;if(t.channelId&&!t.oldChannelId){let o=["VOICE_JOIN_NOTIFICATION",e.globalName||e.username,l];m(t.userId,"voice",o,3407665),p(t.userId,"voice",i.i18n.format(...o))}else if(!t.channelId&&t.oldChannelId){let o=["VOICE_LEAVE_NOTIFICATION",e.globalName||e.username,n];m(t.userId,"voice",o,16724787),p(t.userId,"voice",i.i18n.format(...o))}else if(t.channelId&&t.oldChannelId){let o=["VOICE_MOVE_NOTIFICATION",e.globalName||e.username,n,l];m(t.userId,"voice",o,3407809),p(t.userId,"voice",i.i18n.format(...o))}})}function k({message:s,guildId:t}){if(!i.persist.ghost.users?.[s?.author?.id]?.settings?.text?.enabled)return;const e=r.UserStore.getUser(s.author.id),l=r.ChannelStore.getChannel(s.channel_id);if(!e||!l?.name||!s.guild_id)return;const n=`${r.GuildStore.getGuild(s.guild_id)?.name??"DM"} > ${r.ChannelStore.getChannel(s.channel_id)?.name||"Group"}`;let o=["TEXT_NOTIFICATION",e.globalName||e.username,n];m(e.id,"text",o,7012249),p(e.id,"text",i.i18n.format(...o))}async function x(s){const t=r.UserStore.getUser(s);let e=(await v.default.get(`FriendNotifications;UserLogs;${s}`)||[]).reverse();c.modals.show(({onClose:l,close:n})=>{const o=T.default.parse(`
        <div class="fn--log-modal-container root-1CAIjD fullscreenOnMobile-2971EC rootWithShadow-2hdL2J">
          <div class="modal-header">
            <div class="title">${i.i18n.format("OF_LOGS",t.globalName||t.username)}</div>
            <div class="close" @click="close">
              <svg
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
              >
                <path d="M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636z" fill="currentColor"></path>
              </svg>
            </div>
          </div>
          <div class="modal-body">
            <div v-if="!logs.length" class="no-logs">${i.i18n.format("NO_LOGS")}</div>
            <div v-else class="logs scroller-2MALzE thin-RnSY0a scrollerBase-1Pkza4">
              <div v-for="log in logs" class="log" :style="{'--color': '#'+log.color?.toString(16)}">
                <div class="content">
                  {{ i18nFormat(...log.content) }}
                </div>
                <div class="time" :acord--tooltip-content="formatTime2(log.at)">{{formatTime(log.at)}}</div>
              </div>
            </div>
          </div>
        </div>
      `),a=Vue.createApp({data(){return{searchText:"",logs:e}},methods:{close:n,i18nFormat:i.i18n.format,formatTime(d){return r.moment(d).format("MMM DD, YYYY HH:mm")},formatTime2(d){return`${new Date(d).toLocaleDateString()} ${new Date(d).toLocaleTimeString()}`}}});return c.vue.components.load(a),a.mount(o),l(()=>{setTimeout(()=>{a.unmount(),o.remove()},1e3)}),o})}var V={load(){i.subscriptions.push(F()),i.subscriptions.push(T.default.patch(".actions_c08157",y)),i.subscriptions.push((()=>{const s=document.getElementsByClassName("actions_c08157");for(const t of s)y(t);return()=>{const t=document.querySelectorAll(".acord--fn--list-btn");for(const e of t)e.parentElement.removeChild(e)}})()),i.subscriptions.push(N.default.on("PRESENCE_UPDATES",M),N.default.on("VOICE_STATE_UPDATES",U),N.default.on("MESSAGE_CREATE",k),(()=>{let s=Object.keys(i.persist.ghost.users??{});return u=Object.fromEntries(s.map(t=>[t,r.PresenceStore.getState().statuses[t]])),I=Object.fromEntries(s.map(t=>[t,Object.keys(r.PresenceStore.getState().clientStatuses?.[t]??{}).sort((e,l)=>e-l).join(", ")])),f=Object.fromEntries(s.map(t=>{let e=r.PresenceStore.getState().activities[t];if(!e)return[t,null];let l=`${e.name} ${e.details||e.state||""}`.trim();return[t,[e.type,l,e.name]]}).filter(t=>!t[1])),s=null,()=>{I={},f={},u={}}})(),c.contextMenus.patch("user-profile-actions",(s,t)=>{s?.props?.children&&t?.user?.id&&s?.props?.children.push(c.contextMenus.build.item({type:"separator"}),c.contextMenus.build.item({label:i.i18n.format("FRIEND_NOTIFICATIONS"),action(){C(t.user.id),r.FluxDispatcher.dispatch({type:"USER_PROFILE_MODAL_CLOSE"})}}))}))},async config({item:s}){if(s?.id==="deleteAll"){c.notifications.show.success(i.i18n.format("ALL_DELETING"));let t=(await v.default.keys()).filter(e=>e.startsWith("FriendNotifications;UserLogs;"));for(let e=0,l=t.length;e<l;e++)await v.default.delete(t[e]);c.notifications.show.success(i.i18n.format("ALL_DELETED"))}}};return V})($acord.extension,$acord.dom,$acord.dispatcher,$acord.storage.shared,$acord.patcher,$acord.ui,$acord.modules.common);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
