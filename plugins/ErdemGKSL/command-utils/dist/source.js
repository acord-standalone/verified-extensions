(function(e,s,t){"use strict";function o(a){return a&&typeof a=="object"&&"default"in a?a:{default:a}}var l=o(s),c=l.default?.register({name:"move-bulk",get displayName(){return e.i18n.format("MOVE_BULK_COMMAND_NAME")},get description(){return e.i18n.format("MOVE_BULK_COMMAND_DESCRIPTION")},predicate:({channel:a,guild:u})=>u&&t.PermissionStore.can(19923968n,u),execute:async({args:a,channel:u,reply:n})=>{const N=a[0]?.value,r=t.ChannelStore.getChannel(N);if(!r||!r.guild_id)return n(e.i18n.format("MOVE_BULK_CHANNEL_NOT_FOUND"));const _=a[1]?.value,i=t.ChannelStore.getChannel(_);if(!i||!i.guild_id||r.guild_id!==i.guild_id)return n(e.i18n.format("MOVE_BULK_CHANNEL_NOT_FOUND"));if(!t.PermissionStore.can(19923968n,r)||!t.PermissionStore.can(19923968n,i))return n(e.i18n.format("MOVE_BULK_PERMISSION_DENIED"));const E=Object.keys(t.VoiceStateStore.getVoiceStatesForChannel(N)).slice(0,10);if(E.length===0)return n(e.i18n.format("MOVE_BULK_NO_MEMBERS"));for(const h of E)await t.GuildActions.setChannel(r.guild_id,h,_),await new Promise(M=>setTimeout(M,250));return n(e.i18n.format("MOVE_BULK_SUCCESS",E.length))},get groupName(){return e.i18n.format("GROUP_NAME")},options:[{name:"from_channel",get displayName(){return e.i18n.format("MOVE_BULK_CHANNEL_FROM")},type:7,get description(){return e.i18n.format("MOVE_BULK_CHANNEL_FROM_DESCRIPTION")},required:!0,channelTypes:[2]},{name:"to_channel",get displayName(){return e.i18n.format("MOVE_BULK_CHANNEL_TO")},type:7,get description(){return e.i18n.format("MOVE_BULK_CHANNEL_TO_DESCRIPTION")},required:!0,channelTypes:[2]}]}),f=l.default?.register({name:"join-voice",get displayName(){return e.i18n.format("JOIN_VOICE_COMMAND_NAME")},get description(){return e.i18n.format("JOIN_VOICE_COMMAND_DESCRIPTION")},execute:async({args:a,channel:u,reply:n})=>{const N=a[0]?.value,r=t.ChannelStore.getChannel(N);return!r||![13,1,2,3].includes(r.type)?n(e.i18n.format("JOIN_VOICE_CHANNEL_NOT_FOUND")):r.guild_id&&!t.PermissionStore.can(3146752n,r)?n(e.i18n.format("JOIN_VOICE_PERMISSION_DENIED")):(await t.VoiceActions.selectVoiceChannel(N),n(e.i18n.format("JOIN_VOICE_SUCCESS",`<#${N}>`)))},get groupName(){return e.i18n.format("GROUP_NAME")},options:[{name:"channel",get displayName(){return e.i18n.format("JOIN_VOICE_CHANNEL")},type:7,get description(){return e.i18n.format("JOIN_VOICE_CHANNEL_DESCRIPTION")},required:!0,channelTypes:[13,1,2,3]}]}),d=l.default?.register({name:"mute-bulk",get displayName(){return e.i18n.format("MUTE_BULK_COMMAND_NAME")},get description(){return e.i18n.format("MUTE_BULK_COMMAND_DESCRIPTION")},predicate:({channel:a,guild:u})=>u&&t.PermissionStore.can(7341056n,u),execute:async({args:a,channel:u,reply:n})=>{const N=a[0]?.value,r=t.ChannelStore.getChannel(N);if(!r||!r.guild_id)return n(e.i18n.format("MUTE_BULK_CHANNEL_NOT_FOUND"));if(!t.PermissionStore.can(7341056n,r))return n(e.i18n.format("MUTE_BULK_PERMISSION_DENIED"));const _=Object.entries(t.VoiceStateStore.getVoiceStatesForChannel(N)).filter(i=>!i[1].mute).map(i=>i[0]).slice(0,10);if(_.length===0)return n(e.i18n.format("MUTE_BULK_NO_MEMBERS"));for(const i of _)await t.GuildActions.setServerMute(r.guild_id,i,!0),await new Promise(E=>setTimeout(E,250));return n(e.i18n.format("MUTE_BULK_SUCCESS",_.length))},get groupName(){return e.i18n.format("GROUP_NAME")},options:[{name:"channel",get displayName(){return e.i18n.format("MUTE_BULK_CHANNEL")},type:7,get description(){return e.i18n.format("MUTE_BULK_CHANNEL_DESCRIPTION")},required:!0,channelTypes:[2]}]}),m=l.default?.register({name:"unmute-bulk",get displayName(){return e.i18n.format("UNMUTE_BULK_COMMAND_NAME")},get description(){return e.i18n.format("UNMUTE_BULK_COMMAND_DESCRIPTION")},predicate:({channel:a,guild:u})=>u&&t.PermissionStore.can(7341056n,u),execute:async({args:a,channel:u,reply:n})=>{const N=a[0]?.value,r=t.ChannelStore.getChannel(N);if(!r||!r.guild_id)return n(e.i18n.format("UNMUTE_BULK_CHANNEL_NOT_FOUND"));if(!t.PermissionStore.can(7341056n,r))return n(e.i18n.format("UNMUTE_BULK_PERMISSION_DENIED"));const _=Object.entries(t.VoiceStateStore.getVoiceStatesForChannel(N)).filter(i=>i[1].mute).map(i=>i[0]).slice(0,10);if(_.length===0)return n(e.i18n.format("UNMUTE_BULK_NO_MEMBERS"));for(const i of _)await t.GuildActions.setServerMute(r.guild_id,i,!1),await new Promise(E=>setTimeout(E,250));return n(e.i18n.format("UNMUTE_BULK_SUCCESS",_.length))},get groupName(){return e.i18n.format("GROUP_NAME")},options:[{name:"channel",get displayName(){return e.i18n.format("UNMUTE_BULK_CHANNEL")},type:7,get description(){return e.i18n.format("UNMUTE_BULK_CHANNEL_DESCRIPTION")},required:!0,channelTypes:[2]}]}),g=l.default?.register({name:"deafen-bulk",get displayName(){return e.i18n.format("DEAFEN_BULK_COMMAND_NAME")},get description(){return e.i18n.format("DEAFEN_BULK_COMMAND_DESCRIPTION")},predicate:({channel:a,guild:u})=>u&&t.PermissionStore.can(1535360n,u),execute:async({args:a,channel:u,reply:n})=>{const N=a[0]?.value,r=t.ChannelStore.getChannel(N);if(!r||!r.guild_id)return n(e.i18n.format("DEAFEN_BULK_CHANNEL_NOT_FOUND"));if(!t.PermissionStore.can(1535360n,r))return n(e.i18n.format("DEAFEN_BULK_PERMISSION_DENIED"));const _=Object.entries(t.VoiceStateStore.getVoiceStatesForChannel(N)).filter(i=>!i[1].deaf).map(i=>i[0]).slice(0,10);if(_.length===0)return n(e.i18n.format("DEAFEN_BULK_NO_MEMBERS"));for(const i of _)await t.GuildActions.setServerDeaf(r.guild_id,i,!0),await new Promise(E=>setTimeout(E,250));return n(e.i18n.format("DEAFEN_BULK_SUCCESS",_.length))},get groupName(){return e.i18n.format("GROUP_NAME")},options:[{name:"channel",get displayName(){return e.i18n.format("DEAFEN_BULK_CHANNEL")},type:7,get description(){return e.i18n.format("DEAFEN_BULK_CHANNEL_DESCRIPTION")},required:!0,channelTypes:[2]}]}),C=l.default?.register({name:"undeafen-bulk",get displayName(){return e.i18n.format("UNDEAFEN_BULK_COMMAND_NAME")},get description(){return e.i18n.format("UNDEAFEN_BULK_COMMAND_DESCRIPTION")},predicate:({channel:a,guild:u})=>u&&t.PermissionStore.can(1535360n,u),execute:async({args:a,channel:u,reply:n})=>{const N=a[0]?.value,r=t.ChannelStore.getChannel(N);if(!r||!r.guild_id)return n(e.i18n.format("UNDEAFEN_BULK_CHANNEL_NOT_FOUND"));if(!t.PermissionStore.can(1535360n,r))return n(e.i18n.format("UNDEAFEN_BULK_PERMISSION_DENIED"));const _=Object.entries(t.VoiceStateStore.getVoiceStatesForChannel(N)).filter(i=>i[1].deaf).map(i=>i[0]).slice(0,10);if(_.length===0)return n(e.i18n.format("UNDEAFEN_BULK_NO_MEMBERS"));for(const i of _)await t.GuildActions.setServerDeaf(r.guild_id,i,!1),await new Promise(E=>setTimeout(E,250));return n(e.i18n.format("UNDEAFEN_BULK_SUCCESS",_.length))},get groupName(){return e.i18n.format("GROUP_NAME")},options:[{name:"channel",get displayName(){return e.i18n.format("UNDEAFEN_BULK_CHANNEL")},type:7,get description(){return e.i18n.format("UNDEAFEN_BULK_CHANNEL_DESCRIPTION")},required:!0,channelTypes:[2]}]}),O=l.default?.register({name:"anime-gif",get displayName(){return e.i18n.format("ANIME_GIF_COMMAND_NAME")},get description(){return e.i18n.format("ANIME_GIF_COMMAND_DESCRIPTION")},predicate:({channel:a,guild:u})=>!u||t.PermissionStore.can(3072n,a),execute:async({args:a,channel:u,reply:n,send:N})=>{const r=a[0]?.value,_=(await fetch(`https://api.otakugifs.xyz/gif?reaction=${r}&format=gif`).then(i=>i.json()))?.url;return _?N(`${_}`):n(e.i18n.format("ANIME_GIF_NOT_FOUND"))},get groupName(){return e.i18n.format("GROUP_NAME")},options:[{name:"type",get displayName(){return e.i18n.format("ANIME_GIF_TYPE")},type:3,get description(){return e.i18n.format("ANIME_GIF_TYPE_DESCRIPTION")},required:!0,choices:["airkiss","angrystare","bite","bleh","blush","brofist","celebrate","cheers","clap","confused","cool","cry","cuddle","dance","drool","evillaugh","facepalm","handhold","happy","headbang","hug","kiss","laugh","lick","love","mad","nervous","no","nom","nosebleed","nuzzle","nyah","pat","peek","pinch","poke","pout","punch","roll","run","sad","scared","shrug","shy","sigh","sip","slap","sleep","slowclap","smack","smile","smug","sneeze","sorry","stare","stop","surprised","sweat","thumbsup","tickle","tired","wave","wink","woah","yawn","yay","yes"].map((a,u)=>({name:a,displayName:a,value:a}))}]}),U={load(){e.subscriptions.push(c,f,d,m,g,C,O)}};return U})($acord.extension,$acord.commands,$acord.modules.common);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
