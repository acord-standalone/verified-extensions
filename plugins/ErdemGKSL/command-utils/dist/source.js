(function(e,o,n){"use strict";function f(i){return i&&typeof i=="object"&&"default"in i?i:{default:i}}var E=f(o),d=E.default?.register({name:"move-bulk",get displayName(){return e.i18n.format("MOVE_BULK_COMMAND_NAME")},get description(){return e.i18n.format("MOVE_BULK_COMMAND_DESCRIPTION")},execute:async({args:i,channel:l,reply:r})=>{const _=i[0]?.value,t=n.ChannelStore.getChannel(_);if(!t||!t.guild_id)return r(e.i18n.format("MOVE_BULK_CHANNEL_NOT_FOUND"));const u=i[1]?.value,a=n.ChannelStore.getChannel(u);if(!a||!a.guild_id||t.guild_id!==a.guild_id)return r(e.i18n.format("MOVE_BULK_CHANNEL_NOT_FOUND"));if(!n.PermissionStore.can(19923968n,t)||!n.PermissionStore.can(19923968n,a))return r(e.i18n.format("MOVE_BULK_PERMISSION_DENIED"));const N=Object.keys(n.VoiceStateStore.getVoiceStatesForChannel(_)).slice(0,10);if(N.length===0)return r(e.i18n.format("MOVE_BULK_NO_MEMBERS"));for(const M of N)await n.GuildActions.setChannel(t.guild_id,M,u),await new Promise(h=>setTimeout(h,250));return r(e.i18n.format("MOVE_BULK_SUCCESS",N.length))},get groupName(){return e.i18n.format("GROUP_NAME")},options:[{name:"from_channel",get displayName(){return e.i18n.format("MOVE_BULK_CHANNEL_FROM")},type:7,get description(){return e.i18n.format("MOVE_BULK_CHANNEL_FROM_DESCRIPTION")},required:!0,channelTypes:[2]},{name:"to_channel",get displayName(){return e.i18n.format("MOVE_BULK_CHANNEL_TO")},type:7,get description(){return e.i18n.format("MOVE_BULK_CHANNEL_TO_DESCRIPTION")},required:!0,channelTypes:[2]}]}),s=E.default?.register({name:"join-voice",get displayName(){return e.i18n.format("JOIN_VOICE_COMMAND_NAME")},get description(){return e.i18n.format("JOIN_VOICE_COMMAND_DESCRIPTION")},execute:async({args:i,channel:l,reply:r})=>{const _=i[0]?.value,t=n.ChannelStore.getChannel(_);return!t||![13,1,2,3].includes(t.type)?r(e.i18n.format("JOIN_VOICE_CHANNEL_NOT_FOUND")):t.guild_id&&!n.PermissionStore.can(3146752n,t)?r(e.i18n.format("JOIN_VOICE_PERMISSION_DENIED")):(await n.VoiceActions.selectVoiceChannel(_),r(e.i18n.format("JOIN_VOICE_SUCCESS",`<#${_}>`)))},get groupName(){return e.i18n.format("GROUP_NAME")},options:[{name:"channel",get displayName(){return e.i18n.format("JOIN_VOICE_CHANNEL")},type:7,get description(){return e.i18n.format("JOIN_VOICE_CHANNEL_DESCRIPTION")},required:!0,channelTypes:[13,1,2,3]}]}),m=E.default?.register({name:"mute-bulk",get displayName(){return e.i18n.format("MUTE_BULK_COMMAND_NAME")},get description(){return e.i18n.format("MUTE_BULK_COMMAND_DESCRIPTION")},execute:async({args:i,channel:l,reply:r})=>{const _=i[0]?.value,t=n.ChannelStore.getChannel(_);if(!t||!t.guild_id)return r(e.i18n.format("MUTE_BULK_CHANNEL_NOT_FOUND"));if(!n.PermissionStore.can(7341056n,t))return r(e.i18n.format("MUTE_BULK_PERMISSION_DENIED"));const u=Object.entries(n.VoiceStateStore.getVoiceStatesForChannel(_)).filter(a=>!a[1].mute).map(a=>a[0]).slice(0,10);if(u.length===0)return r(e.i18n.format("MUTE_BULK_NO_MEMBERS"));for(const a of u)await n.GuildActions.setServerMute(t.guild_id,a,!0),await new Promise(N=>setTimeout(N,250));return r(e.i18n.format("MUTE_BULK_SUCCESS",u.length))},get groupName(){return e.i18n.format("GROUP_NAME")},options:[{name:"channel",get displayName(){return e.i18n.format("MUTE_BULK_CHANNEL")},type:7,get description(){return e.i18n.format("MUTE_BULK_CHANNEL_DESCRIPTION")},required:!0,channelTypes:[2]}]}),c=E.default?.register({name:"unmute-bulk",get displayName(){return e.i18n.format("UNMUTE_BULK_COMMAND_NAME")},get description(){return e.i18n.format("UNMUTE_BULK_COMMAND_DESCRIPTION")},execute:async({args:i,channel:l,reply:r})=>{const _=i[0]?.value,t=n.ChannelStore.getChannel(_);if(!t||!t.guild_id)return r(e.i18n.format("UNMUTE_BULK_CHANNEL_NOT_FOUND"));if(!n.PermissionStore.can(7341056n,t))return r(e.i18n.format("UNMUTE_BULK_PERMISSION_DENIED"));const u=Object.entries(n.VoiceStateStore.getVoiceStatesForChannel(_)).filter(a=>a[1].mute).map(a=>a[0]).slice(0,10);if(u.length===0)return r(e.i18n.format("UNMUTE_BULK_NO_MEMBERS"));for(const a of u)await n.GuildActions.setServerMute(t.guild_id,a,!1),await new Promise(N=>setTimeout(N,250));return r(e.i18n.format("UNMUTE_BULK_SUCCESS",u.length))},get groupName(){return e.i18n.format("GROUP_NAME")},options:[{name:"channel",get displayName(){return e.i18n.format("UNMUTE_BULK_CHANNEL")},type:7,get description(){return e.i18n.format("UNMUTE_BULK_CHANNEL_DESCRIPTION")},required:!0,channelTypes:[2]}]}),g=E.default?.register({name:"deafen-bulk",get displayName(){return e.i18n.format("DEAFEN_BULK_COMMAND_NAME")},get description(){return e.i18n.format("DEAFEN_BULK_COMMAND_DESCRIPTION")},execute:async({args:i,channel:l,reply:r})=>{const _=i[0]?.value,t=n.ChannelStore.getChannel(_);if(!t||!t.guild_id)return r(e.i18n.format("DEAFEN_BULK_CHANNEL_NOT_FOUND"));if(!n.PermissionStore.can(1535360n,t))return r(e.i18n.format("DEAFEN_BULK_PERMISSION_DENIED"));const u=Object.entries(n.VoiceStateStore.getVoiceStatesForChannel(_)).filter(a=>!a[1].deaf).map(a=>a[0]).slice(0,10);if(u.length===0)return r(e.i18n.format("DEAFEN_BULK_NO_MEMBERS"));for(const a of u)await n.GuildActions.setServerDeaf(t.guild_id,a,!0),await new Promise(N=>setTimeout(N,250));return r(e.i18n.format("DEAFEN_BULK_SUCCESS",u.length))},get groupName(){return e.i18n.format("GROUP_NAME")},options:[{name:"channel",get displayName(){return e.i18n.format("DEAFEN_BULK_CHANNEL")},type:7,get description(){return e.i18n.format("DEAFEN_BULK_CHANNEL_DESCRIPTION")},required:!0,channelTypes:[2]}]}),C=E.default?.register({name:"undeafen-bulk",get displayName(){return e.i18n.format("UNDEAFEN_BULK_COMMAND_NAME")},get description(){return e.i18n.format("UNDEAFEN_BULK_COMMAND_DESCRIPTION")},execute:async({args:i,channel:l,reply:r})=>{const _=i[0]?.value,t=n.ChannelStore.getChannel(_);if(!t||!t.guild_id)return r(e.i18n.format("UNDEAFEN_BULK_CHANNEL_NOT_FOUND"));if(!n.PermissionStore.can(1535360n,t))return r(e.i18n.format("UNDEAFEN_BULK_PERMISSION_DENIED"));const u=Object.entries(n.VoiceStateStore.getVoiceStatesForChannel(_)).filter(a=>a[1].deaf).map(a=>a[0]).slice(0,10);if(u.length===0)return r(e.i18n.format("UNDEAFEN_BULK_NO_MEMBERS"));for(const a of u)await n.GuildActions.setServerDeaf(t.guild_id,a,!1),await new Promise(N=>setTimeout(N,250));return r(e.i18n.format("UNDEAFEN_BULK_SUCCESS",u.length))},get groupName(){return e.i18n.format("GROUP_NAME")},options:[{name:"channel",get displayName(){return e.i18n.format("UNDEAFEN_BULK_CHANNEL")},type:7,get description(){return e.i18n.format("UNDEAFEN_BULK_CHANNEL_DESCRIPTION")},required:!0,channelTypes:[2]}]}),O=E.default?.register({name:"anime-gif",get displayName(){return e.i18n.format("ANIME_GIF_COMMAND_NAME")},get description(){return e.i18n.format("ANIME_GIF_COMMAND_DESCRIPTION")},execute:async({args:i,channel:l,reply:r,send:_})=>{const t=i[0]?.value,u=(await fetch(`https://api.otakugifs.xyz/gif?reaction=${t}&format=gif`).then(a=>a.json()))?.url;return u?_(`${u}`):r(e.i18n.format("ANIME_GIF_NOT_FOUND"))},get groupName(){return e.i18n.format("GROUP_NAME")},options:[{name:"type",get displayName(){return e.i18n.format("ANIME_GIF_TYPE")},type:3,get description(){return e.i18n.format("ANIME_GIF_TYPE_DESCRIPTION")},required:!0,choices:["airkiss","angrystare","bite","bleh","blush","brofist","celebrate","cheers","clap","confused","cool","cry","cuddle","dance","drool","evillaugh","facepalm","handhold","happy","headbang","hug","kiss","laugh","lick","love","mad","nervous","no","nom","nosebleed","nuzzle","nyah","pat","peek","pinch","poke","pout","punch","roll","run","sad","scared","shrug","shy","sigh","sip","slap","sleep","slowclap","smack","smile","smug","sneeze","sorry","stare","stop","surprised","sweat","thumbsup","tickle","tired","wave","wink","woah","yawn","yay","yes"].map((i,l)=>({name:i,displayName:i,value:i}))}]}),U={load(){e.subscriptions.push(d,s,m,c,g,C,O)}};return U})($acord.extension,$acord.commands,$acord.modules.common);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
