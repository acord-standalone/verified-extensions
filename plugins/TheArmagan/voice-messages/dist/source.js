(function(i,g,c,R,b,w){"use strict";function D(e){return e&&typeof e=="object"&&"default"in e?e:{default:e}}var m=D(b),M=()=>w.injectCSS("@keyframes vmrecording{0%{color:#f23f42}50%{color:#fc7a7d}to{color:#f23f42}}@keyframes vmloading{0%{transform:scale(1)}50%{transform:scale(.9)}to{transform:scale(1)}}.vm--record-button.recording svg{animation:vmrecording 1s linear infinite alternate}.vm--record-button.loading svg{animation:vmloading 2s linear infinite alternate}");const C=DiscordNative.nativeModules.requireModule("discord_voice"),S=R.require("fs");function y(e){isNaN(parseInt(e))&&(e=0),e=Math.floor(e);let d=Math.floor(e/60/60);return`${d>0?`${d.toString().padStart(2,"0")}:`:""}${Math.floor(e/60%60).toString().padStart(2,"0")}:${(e%60).toString().padStart(2,"0")}`}function I(e,d){return new Promise((f,a)=>{const o=c.SelectedChannelStore.getChannelId(),t=c.PendingReplyStore.getPendingReply(o);t&&c.FluxDispatcher.dispatch({type:"DELETE_PENDING_REPLY",channelId:o});const r=new c.CloudUpload({file:new File([e],"voice-message.ogg",{type:"audio/ogg; codecs=opus"}),isClip:!1,isThumbnail:!1,platform:1},o,!1,0);r.on("complete",()=>{c.Rest.post({url:`/channels/${o}/messages`,body:{flags:1<<13,channel_id:o,content:"",nonce:c.Snowflake.fromTimestamp(Date.now()),sticker_ids:[],type:0,attachments:[{id:"0",filename:r.filename,uploaded_filename:r.uploadedFilename,waveform:d.waveform,duration_secs:d.duration}],message_reference:t?c.MessageActions.getSendMessageOptionsForReply(t)?.messageReference:null}}),f()}),r.on("error",()=>{g.notifications.show.error(i.i18n.format("UPLOAD_FAILED")),f()}),r.upload()})}var L={load(){const e=new AudioContext;async function d(f){const a=await e.decodeAudioData(await f.arrayBuffer()),o=a.getChannelData(0),t=new Uint8Array(_.clamp(Math.floor(a.duration*10),Math.min(32,o.length),256)),r=Math.floor(o.length/t.length);for(let n=0;n<t.length;n++){let s=0;for(let u=0;u<r;u++){const h=n*r+u;s+=o[h]**2}t[n]=~~(Math.sqrt(s/r)*255)}const l=Math.max(...t),p=1+(255/l-1)*Math.min(1,100*(l/255)**3);for(let n=0;n<t.length;n++)t[n]=Math.min(255,~~(t[n]*p));return{waveform:btoa(String.fromCharCode(...t)),duration:a.duration}}i.subscriptions.push(M(),()=>{e.close()},m.default.patch(".buttons-uaqb-5",f=>{const a=m.default.parse(`
            <button type="button" class="button-ejjZWC lookBlank-FgPMy6 grow-2T4nbg vm--record-button">
              <div class="contents-3NembX button-2fCJ0o button-3BaQ4X">
                <div class="buttonWrapper-3YFQGJ">
                  <svg width="24" height="24" viewBox="0 0 24 24">
                    <path fill-rule="evenodd" clip-rule="evenodd"
                      d="M14.99 11C14.99 12.66 13.66 14 12 14C10.34 14 9 12.66 9 11V5C9 3.34 10.34 2 12 2C13.66 2 15 3.34 15 5L14.99 11ZM12 16.1C14.76 16.1 17.3 14 17.3 11H19C19 14.42 16.28 17.24 13 17.72V21H11V17.72C7.72 17.23 5 14.41 5 11H6.7C6.7 14 9.24 16.1 12 16.1ZM12 4C11.2 4 11 4.66667 11 5V11C11 11.3333 11.2 12 12 12C12.8 12 13 11.3333 13 11V5C13 4.66667 12.8 4 12 4Z"
                      fill="currentColor"></path>
                    <path fill-rule="evenodd" clip-rule="evenodd"
                      d="M14.99 11C14.99 12.66 13.66 14 12 14C10.34 14 9 12.66 9 11V5C9 3.34 10.34 2 12 2C13.66 2 15 3.34 15 5L14.99 11ZM12 16.1C14.76 16.1 17.3 14 17.3 11H19C19 14.42 16.28 17.24 13 17.72V22H11V17.72C7.72 17.23 5 14.41 5 11H6.7C6.7 14 9.24 16.1 12 16.1Z"
                      fill="currentColor"></path>
                  </svg>
                </div>
              </div>
            </button>
          `);let o=!1,t=!1;function r(){C.startLocalAudioRecording({echoCancellation:!0,noiseCancellation:!0},s=>{s?o=!0:g.notifications.show.error(i.i18n.format("RECORDING_FAILED"))})}const l=g.tooltips.create(a,i.i18n.format("START_RECORDING"));let p=null;async function n(s=!1){C.stopLocalAudioRecording(async(u,h)=>{if(s||!u)return;const v=new Blob([await S.promises.readFile(u)]),A=await d(v);t=!0,a.classList.add("loading"),l.content=i.i18n.format("UPLOADING"),await I(v,A),t=!1,a.classList.remove("loading"),l.content=i.i18n.format("START_RECORDING")})}return a.onclick=()=>{if(!t)if(o)clearInterval(p),o=!1,n(),a.classList.remove("recording"),l.content=i.i18n.format("START_RECORDING");else{o=!0,r(),a.classList.add("recording");let s=Date.now();l.content=i.i18n.format("RECORDING","00:00"),p=setInterval(()=>{l.content=i.i18n.format("RECORDING",y((Date.now()-s)/1e3))},1e3)}},f.prepend(a),()=>{clearInterval(p),n(!0),l.destroy()}}))}};return L})($acord.extension,$acord.ui,$acord.modules.common,$acord.modules,$acord.dom,$acord.patcher);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
