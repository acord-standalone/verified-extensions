(function(p,n,i,a,h){"use strict";function r(t){return t&&typeof t=="object"&&"default"in t?t:{default:t}}var M=r(p),c=r(h);let d=!1;async function u(){if(d)return setTimeout(u,125);d=!0;let t=n.NotificationSettingsStore.getState(),e=[];t.disabledSounds.includes("mute")||e.push("mute"),t.disabledSounds.includes("unmute")||e.push("unmute"),t.disabledSounds.push(...e),await c.default.sleep(50),await n.MediaEngineActions.toggleSelfMute(),await c.default.sleep(100),await n.MediaEngineActions.toggleSelfMute(),t.disabledSounds=t.disabledSounds.filter(o=>!e.includes(o)),d=!1}var g={load(){let t=n.GatewayConnectionStore.getSocket(),e={_selfMute:!1,_selfDeaf:!1,_selfVideo:!1,get selfMute(){return a.persist.ghost.settings.autoMute?this._selfDeaf||this._selfMute:this._selfMute},set selfMute(s){this._selfMute=s},get selfDeaf(){return this._selfDeaf},set selfDeaf(s){this._selfDeaf=s},get selfVideo(){return this._selfVideo},set selfVideo(s){this._selfVideo=s}},o=["selfDeaf","selfMute","selfVideo"];a.subscriptions.push(M.default.before("voiceStateUpdate",t,s=>{for(let f=0;f<o.length;f++){const l=o[f];s[0][l]=e[l]||s[0][l]}return s})),a.subscriptions.push(i.contextMenus.patch("audio-device-context",(s,f)=>{let l=s?.props?.children?.props?.children;!Array.isArray(l)||(l.push(i.contextMenus.build.item({type:"separator"})),f.renderInputDevices?l.push(i.contextMenus.build.item({type:"toggle",label:a.i18n.format("FAKE_MUTE"),checked:e.selfMute,async action(){e.selfMute=!e.selfMute,u()}})):l.push(i.contextMenus.build.item({type:"toggle",label:a.i18n.format("FAKE_DEAF"),checked:e.selfDeaf,async action(){e.selfDeaf=!e.selfDeaf,u()}}),i.contextMenus.build.item({type:"toggle",label:a.i18n.format("FAKE_CAMERA"),checked:e.selfVideo,async action(){e.selfVideo=!e.selfVideo,u()}})))}))},unload(){u()}};return g})($acord.patcher,$acord.modules.common,$acord.ui,$acord.extension,$acord.utils);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
